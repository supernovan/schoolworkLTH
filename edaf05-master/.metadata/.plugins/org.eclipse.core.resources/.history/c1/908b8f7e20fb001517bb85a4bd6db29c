package lab4;

import java.util.*;

public class ClosestPairs {
	ArrayList<Pair> pairs;
	ArrayList<Pair> help;
	public ClosestPairs() {
		pairs = new ArrayList<Pair>();
	}
	
	public void add(Pair p) {
		pairs.add(p);
	}
	
	public void sort() {
		help = new ArrayList<Pair>(pairs.size());
		mSort(0, pairs.size()-1);
	}
	private void mSort(int low, int high) {
		if (low < high) {
			int middle = low + (high - low)/2;
			mSort(low, middle);
			mSort(middle+1, high);
			
			merge(low, middle, high);
		}
	}
	
	private void merge(int low, int middle, int high) {
		
		for (int i = low; i<= high; i++) {
			help.set(i, pairs.get(i));
		}
		
		
		int i = low;
		int j = middle + 1;
		int k = low;
		
		while (i <= middle && j <= high) {
			if (help.get(i).get() <= help.get(j).get()) {
				pairs.set(k, help.get(i));
				i++;
			} else {
				pairs.set(k, help.get(j));
				j++;
			}
			k++;
		}
		
		while (i <= middle) {
			pairs.set(k, help.get(i));
			k++;
			i++;
		}
	}
	
	public Pair closeP(ArrayList<Pair> pX, ArrayList<Pair> pY) {
		
		
		return new Pair(0, 1);
	}
}
